// Code generated by MockGen. DO NOT EDIT.
// Source: friend_list_repository.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	model "problem1/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	echo "github.com/labstack/echo/v4"
)

// MockFriendListRepository is a mock of FriendListRepository interface.
type MockFriendListRepository struct {
	ctrl     *gomock.Controller
	recorder *MockFriendListRepositoryMockRecorder
}

// MockFriendListRepositoryMockRecorder is the mock recorder for MockFriendListRepository.
type MockFriendListRepositoryMockRecorder struct {
	mock *MockFriendListRepository
}

// NewMockFriendListRepository creates a new mock instance.
func NewMockFriendListRepository(ctrl *gomock.Controller) *MockFriendListRepository {
	mock := &MockFriendListRepository{ctrl: ctrl}
	mock.recorder = &MockFriendListRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFriendListRepository) EXPECT() *MockFriendListRepositoryMockRecorder {
	return m.recorder
}

// CheckUserExist mocks base method.
func (m *MockFriendListRepository) CheckUserExist(c echo.Context) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckUserExist", c)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckUserExist indicates an expected call of CheckUserExist.
func (mr *MockFriendListRepositoryMockRecorder) CheckUserExist(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckUserExist", reflect.TypeOf((*MockFriendListRepository)(nil).CheckUserExist), c)
}

// GetFriendListByUserId mocks base method.
func (m *MockFriendListRepository) GetFriendListByUserId(c echo.Context) ([]*model.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFriendListByUserId", c)
	ret0, _ := ret[0].([]*model.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFriendListByUserId indicates an expected call of GetFriendListByUserId.
func (mr *MockFriendListRepositoryMockRecorder) GetFriendListByUserId(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFriendListByUserId", reflect.TypeOf((*MockFriendListRepository)(nil).GetFriendListByUserId), c)
}
