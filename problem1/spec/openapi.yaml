openapi: "3.0.3"
info:
  title: "minimal sns app"
  description: "road to mixi API document"
  version: "1.0.0"
paths:
  /get_friend_list:
    get:
      description: "指定したユーザのフレンドのリストを返す"
      summary: "get friend list of specified user"
      parameters:
        - name: ID
          in: query
          required: true
          description: "フレンドリストを取得したいユーザの id を指定する"
          schema:
            type: integer
      responses:
        "200":
          description: "ok"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: "User not exist"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
  /get_friend_of_friend_list:
    get:
      description: "指定したユーザのフレンドのフレンドのリストを返す"
      summary: "get friend list of friends of specified user"
      parameters:
        - name: ID
          in: query
          required: true
          description: "フレンドリストを取得したいユーザの id を指定する"
          schema:
            type: integer
      responses:
        "200":
          description: "ok"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FriendList"
        "400":
          description: "User not exist"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
  /get_friend_of_friend_list_paging:
    get:
      description: "ページネーションを含めて指定したユーザのフレンドのフレンドのリストを返す"
      summary: "get friend list of friends of specified user"
      parameters:
        - name: ID
          in: query
          required: true
          description: "フレンドリストを取得したいユーザの id を指定する"
          schema:
            type: integer
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: "ok"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FriendList"
        "400":
          description: "User not exist"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPError"
components:
  parameters:
    limit:
      name: limit
      in: query
      description: "paging limit"
      required: false
      schema:
        $ref: "#/components/schemas/limit"
    page:
      name: page
      in: query
      description: "start page"
      required: false
      schema:
        $ref: "#/components/schemas/page"
  schemas:
    limit:
      type: integer
      example: 20
      default: 20
      maximum: 100
    page:
      type: integer
      example: 1
      default: 1
    HTTPError:
      type: object
      properties:
        code:
          type: integer
          description: ステータスコード
          default: 500
        message:
          type: string
          example: "error message"
    id:
      type: integer
      maxLength: 11
      example: 12345678910
    name:
      type: string
      maxLength: 64
      example: "鈴木 一郎"
    User:
      type: object
      properties:
        ID:
          $ref: "#/components/schemas/id"
        name:
          $ref: "#/components/schemas/name"
      required:
        - ID
        - name
    FriendList:
      type: object
      properties:
        friends:
          type: array
          items:
            $ref: "#/components/schemas/User"
